<% today = Date.today %>

<div class="employeeResume">
  <div class="formdiv fixedSize200">
    <h4>Nombre d'employés</h4>
    <h3 class="txtcenter"><%= @employees.size %></h3>
  </div>

  <div class="formdiv fixedSize200 onsite">
    <h4>Sur site</h4>
    <h3 class="txtcenter">
      <%= @onsite_count %>
    </h3>
  </div>

  <div class="formdiv fixedSize200 remote">
    <h4>En télétravail</h4>
    <h3 class="txtcenter"><%= @remote_count %></h3>
  </div>

  <div class="formdiv fixedSize200 holiday">
    <h4>En congés</h4>
    <h3 class="txtcenter"><%= @employees.size - @onsite_count - @sick_count - @remote_count %></h3>
  </div>

  <div class="formdiv fixedSize200 sick">
    <h4>En arrêt</h4>
    <h3 class="txtcenter"><%= @sick_count %></h3>
  </div>
</div>



<div class="formdiv fullwidth">
  <%= form_with url: employees_path, method: :get, local: true, html: { id: "filter-form" } do %>
    <div class="filter-container">
      <%# Initialiser le décalage de mois à partir des paramètres ou à 0 si non défini %>
  <% month_offset = params[:month_offset].to_i %>

  <%# Calcul des dates de début et de fin en fonction du décalage %>
  <% start_date = (Date.today.beginning_of_month >> month_offset) %>
  <% end_date = (Date.today.end_of_month >> month_offset) %>

      <div class="filter-container">
        <%# Vérifier si des dates sont fournies via les paramètres, sinon utiliser le mois courant %>
        <% start_date = params[:start_date].present? ? Date.parse(params[:start_date]) : Date.today.beginning_of_month %>
        <% end_date = params[:end_date].present? ? Date.parse(params[:end_date]) : start_date.end_of_month %>

        <label for="start_date">Du :</label>
        <%= date_field_tag :start_date, start_date, id: "start_date_field", class: "date-input" %>

        <label for="end_date">Au :</label>
        <%= date_field_tag :end_date, end_date, id: "end_date_field", class: "date-input" %>

        <%= submit_tag "Filtrer", class: "button" %>

        <!-- Bouton pour le mois précédent : décale les dates actuellement affichées d'un mois en arrière -->
        <%= link_to " << ", employees_path(start_date: (start_date << 1).beginning_of_month, end_date: (start_date << 1).end_of_month), class: "btn-filter ml60px" %>

        <!-- Bouton pour le mois en cours : réinitialise les dates au mois courant -->
        <%= link_to "Mois en cours", employees_path(start_date: Date.today.beginning_of_month, end_date: Date.today.end_of_month), class: "btn-filter" %>

        <!-- Bouton pour le mois suivant : décale les dates actuellement affichées d'un mois en avant -->
        <%= link_to " >> ", employees_path(start_date: (start_date >> 1).beginning_of_month, end_date: (start_date >> 1).end_of_month), class: "btn-filter" %>

      </div>

  <% end %>

  <table>
    <thead>
    </thead>
    <tbody>
    <% start_date = params[:start_date].present? ? Date.parse(params[:start_date]) : Date.today.beginning_of_month %>
    <% end_date = params[:end_date].present? ? Date.parse(params[:end_date]) : Date.today.end_of_month %>

  <table class="tablePlanning">
    <colgroup>
      <col style="width: 200px;"> <!-- Première colonne plus large -->
      <% (start_date..end_date).each do %>
        <col style="width: 12px;"> <!-- Colonne pour le matin -->
        <col style="width: 12px;"> <!-- Colonne pour l'après-midi -->
      <% end %>
    </colgroup>
    <thead>
      <tr>
        <th class="tPlanning"><%= mois_francais(start_date) %></th>
        <% (start_date..end_date).each do |date| %>
          <th class="tPlanning" colspan="2" style="<%= 'color: red;' if date == Date.today %>">
            <%= date.strftime("%d") %>
          </th>
        <% end %>
      </tr>
    </thead>
    <tbody>
      <% @employees.each do |employee| %>
        <% overtime_hours = employee.events.where(event_type: 'heures_supplémentaires', status: 'approuvé', start_date: start_date..end_date).sum(:overtime_hours) %>

        <tr>
          <td>
            <%= link_to "#{employee.lastname} #{employee.firstname}", employee_path(employee), class: "FirstCol link-text #{'admin-highlight' if employee.admin?}" %>

            <% if overtime_hours > 0 %>
              <span class="overtime-info">(<%= overtime_hours %>h supp.)</span>
            <% end %>
          </td>

          <% (start_date..end_date).each do |date| %>
            <% event = employee.events.where(status: 'approuvé').find { |e| e.start_date <= date && e.end_date >= date } %>

            <!-- Matin -->
            <td style="<%= cell_style(employee, event, date, 'morning') %>"></td>

            <!-- Après-midi -->
            <td style="<%= cell_style(employee, event, date, 'afternoon') %>"></td>
          <% end %>
        </tr>
      <% end %>
    </tbody>

  </table>

    </tbody>
  </table>
  </div>
</div>

<div class="flexinline">
  <div class="halfwidth formdiv">

    <div class="employee-filters">
      <div class="filter-buttons">

        <%= link_to "Employés actuels (#{@total_employees})", employees_path, class: "btn-filter btn-filter-all #{'active' if params[:group].blank? && params[:position].blank?}" %>

        <div class="flexinline mt20">
          <div>
            <!-- Filtre par groupe -->
            <h4>Filtrer par groupe :</h4>
            <% if @group_counts.present? %>
              <% @group_counts.each do |group, count| %>
                <%= link_to "#{group} (#{count})", employees_path(group: group, position: params[:position]), class: "btn-filter #{'active' if params[:group] == group}" %>
              <% end %>
            <% else %>
              <p>Aucun groupe disponible.</p>
            <% end %>
          </div>
          <div>
            <!-- Filtre par poste -->
            <h4>Filtrer par poste :</h4>
            <% if @position_counts.present? %>
              <% @position_counts.each do |position, count| %>
                <%= link_to "#{position} (#{count})", employees_path(position: position, group: params[:group]), class: "btn-filter #{'active' if params[:position] == position}" %>
              <% end %>
            <% else %>
              <p>Aucun poste disponible.</p>
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <table class="tableAnnuaire">
      <colgroup>
        <col style="width: 200px;"> <!-- Première colonne plus large -->
        <col style="width: auto;"> <!-- Colonne pour le matin -->
        <col style="width: auto;"> <!-- Colonne pour l'après-midi -->
      </colgroup>
      <thead>
        <tr>
          <th>Identité</th>
          <th>Téléphone</th>
          <th>Congés <%= Date.today.year %></th>
        </tr>
      </thead>
  <tbody>
    <% @selected_employees.each do |employee| %>
      <tr>
        <td>
          <%= link_to "#{employee.lastname} #{employee.firstname}", employee_path(employee), class: "link-text #{'admin-highlight' if employee.admin?}" %>
          <% if employee.admin? %>
            <strong>(Admin)</strong>
          <% end %>
        </td>
        <td><%= employee.phone %></td>

        <%# Calcul du nombre de congés pris pour l'année en cours %>
        <% current_year = Date.today.year %>
        <% leaves_taken = employee.events.where(event_type: 'congé', status: 'approuvé', start_date: Date.new(current_year)..Date.new(current_year).end_of_year).sum(:leave_days_count) %>
        <td><%= leaves_taken %> jour(s)</td>
      </tr>
    <% end %>
  </tbody>

    </table>


      <% if user_signed_in? && current_user.employee.admin? %>
        <!-- Bouton pour ajouter un employé (réservé aux admins) -->
        <%= link_to "Ajouter un employé", new_employee_path, class: "link-button" %>
      <% end %>

  </div>

  <div class="halfwidth formdiv asks">
  <h3>Demandes en attente</h3>
  <ul class="flexincolleft">
    <% if Event.where(status: 'en_attente').present? %>
      <% Event.where(status: 'en_attente').each do |event| %>
        <li class="flexinlineleft">
          <div>
            <%= event.employee.firstname %> <%= event.employee.lastname %> :
              <% if event.event_type == 'heures_supplémentaires' %>
                Heures sup le <%= l(event.start_date, format: "%d/%m") %> - <%= event.overtime_hours %> h
              <% else %>
                <%= event.event_type.capitalize %>
                <% if event.start_date == event.end_date && event.part_of_day.present? %>
                  (<%= event.part_of_day == "morning" ? "Matin" : "Après-midi" %>)
                <% end %>
                du <%= l(event.start_date, format: "%d/%m") %> au <%= l(event.end_date, format: "%d/%m") %>
              <% end %>
          </div>

          <% if user_signed_in? && current_user.employee.admin? %>
            <div class="btn-inline">
              <%= button_to approve_employee_event_path(event.employee, event), method: :patch, class: "btn btn-approve" do %>
                <i class="fa-solid fa-check"></i>
              <% end %>

              <%= button_to reject_employee_event_path(event.employee, event), method: :patch, class: "btn btn-reject" do %>
                <i class="fa-solid fa-xmark"></i>
              <% end %>
            </div>
          <% end %>
        </li>
      <% end %>
    <% else %>
      <li class="flexinlineleft">Aucune demande en attente.</li>
    <% end %>
  </ul>
</div>

</div>

<div class="halfwidth formdiv asks">
  <h3>Notes de frais en attente</h3>
  <ul class="flexincolleft">
    <% pending_expenses = Expense.where(status: "en_attente").includes(:employee) %>

    <% if pending_expenses.any? %>
      <% pending_expenses.each do |expense| %>
        <li class="flexinlineleft">
          <div>
            <%= expense.employee.firstname %> <%= expense.employee.lastname %> :
            <strong><%= number_to_currency(expense.amount, unit: "€") %></strong>
            - <%= expense.description %>
            (<%= l(expense.date, format: "%d/%m/%Y") %>)
          </div>

          <% if user_signed_in? && current_user.employee.admin? %>
            <div class="btn-inline">
              <% if expense.id.present? %>
                <% if expense.image.attached? %>
                  <%= button_to "📎", expense.image, method: :get, class: "btn", form: { target: "_blank" } %>
                <% end %>
                <%= button_to approve_employee_expense_path(expense.employee, expense), method: :patch, class: "btn btn-approve" do %>
                  <i class="fa-solid fa-check"></i>
                <% end %>
              <% end %>
              <%= button_to reject_employee_expense_path(expense.employee, expense), method: :patch, class: "btn btn-reject", data: { confirm: "Voulez-vous refuser cette note de frais ?" } do %>
                <i class="fa-solid fa-xmark"></i>
              <% end %>
            </div>
          <% end %>
        </li>
      <% end %>
    <% else %>
      <li class="flexinlineleft">Aucune note de frais en attente.</li>
    <% end %>
  </ul>
</div>
